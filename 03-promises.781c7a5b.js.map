{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,OAAQF,SAASC,cAAc,UAC/BE,cAAeH,SAASC,cAAc,kBACtCG,aAAcJ,SAASC,cAAc,iBACrCI,UAAWL,SAASC,cAAc,oBA2BpC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAlCPV,EAAKC,QAAQiB,iBAAiB,UAE9B,SAAkBC,GAChBA,EAAIC,iBAKJ,IAJA,IAAIC,GAAcrB,EAAKK,cAAciB,MACjCC,GAAQvB,EAAKM,aAAagB,MAC1BE,GAAUxB,EAAKO,UAAUe,MAEpBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDW,GAAcE,EACdJ,EAAIe,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  btnRef: document.querySelector('button'),\n  firstDelayRef: document.querySelector('[name=\"delay\"]'),\n  stepDelayRef: document.querySelector('[name=\"step\"]'),\n  amountRef: document.querySelector('[name=\"amount\"]'),\n};\nrefs.formRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let firstDelay = +refs.firstDelayRef.value;\n  let step = +refs.stepDelayRef.value;\n  let amount = +refs.amountRef.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += step;\n    evt.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","btnRef","firstDelayRef","stepDelayRef","amountRef","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","firstDelay","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.781c7a5b.js.map"}